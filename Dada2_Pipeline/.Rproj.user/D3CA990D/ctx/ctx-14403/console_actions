{
    "data" : [
        "\nR version 4.0.4 (2021-02-15) -- \"Lost Library Book\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "plot(cars)",
        "Bioconductor version 3.12 (BiocManager 1.30.12), ?BiocManager::install for help\n",
        "> ",
        "library(\"dada2\")",
        "> ",
        "library(\"phyloseq\")",
        "> ",
        "library(\"Biostrings\")",
        "> ",
        "library(\"ggplot2\")",
        "> ",
        "library(\"dplyr\")",
        "> ",
        "library(\"tidyr\")",
        "> ",
        "library(\"tibble\")",
        "> ",
        "library(\"readxl\")",
        "> ",
        "library(\"readr\")",
        "> ",
        "library(\"stringr\")",
        "> ",
        "library(\"kableExtra\") ",
        "> ",
        "library(\"tidyverse\")",
        "> ",
        "#library(\"pr2database\")",
        "> ",
        "PR2_tax_levels <- c(\"Kingdom\", \"Supergroup\", \"Division\", \"Class\", ",
        "+ ",
        "                    \"Order\", \"Family\",",
        "+ ",
        "                    \"Genus\", \"Species\")",
        "> ",
        "",
        "> ",
        "#### Examine fastq files",
        "> ",
        "# get a list of all fastq files in the fastq\" directory and separate R1 and R2",
        "> ",
        "fns <- sort(list.files(fastq_dir, full.names = T))",
        "Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'x' in selecting a method for function 'sort': object 'fastq_dir' not found\n",
        "> ",
        "fastq_dir <- \"fastq\"  # fastq directory with the samples we are using",
        "> ",
        "database_dir <- \"databases/\"  # folder with the PR2 database https://github.com/vaulot/metabarcodes_tutorials/tree/master/databases",
        "> ",
        "",
        "> ",
        "filtered_dir <- \"fastq_filtered/\"  # fastq filtered",
        "> ",
        "qual_dir <- \"qual_pdf/\"  # qual pdf",
        "> ",
        "dada2_dir <- \"dada2_out/\"  # dada2 results",
        "> ",
        "blast_dir <- \"blast/\"  # blast2 results",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "dir.create(filtered_dir)",
        "> ",
        "dir.create(qual_dir)",
        "> ",
        "dir.create(dada2_dir)",
        "> ",
        "dir.create(blast_dir)",
        "> ",
        "primer_set_fwd = c(\"CCAGCAGCCGCGGTAATTCC\", \"CCAGCACCCGCGGTAATTCC\", \"CCAGCAGCTGCGGTAATTCC\",",
        "+ ",
        "                   \"CCAGCACCTGCGGTAATTCC\")",
        "> ",
        "primer_set_rev = c(\"ACTTTCGTTCTTGATYRATGA\")",
        "> ",
        "primer_length_fwd <- str_length(primer_set_fwd[1])",
        "> ",
        "primer_length_rev <- str_length(primer_set_rev[1])",
        "> ",
        "PR2_tax_levels <- c(\"Kingdom\", \"Supergroup\", \"Division\", \"Class\", ",
        "+ ",
        "                    \"Order\", \"Family\",",
        "+ ",
        "                    \"Genus\", \"Species\")",
        "> ",
        "",
        "> ",
        "#### Examine fastq files",
        "> ",
        "# get a list of all fastq files in the fastq\" directory and separate R1 and R2",
        "> ",
        "fns <- sort(list.files(fastq_dir, full.names = T))",
        "> ",
        "fns <- fns[str_detect(basename(fns), \".fastq.gz\")]",
        "> ",
        "fns_R1 <- fns[str_detect(basename(fns), \"R1\")]",
        "> ",
        "fns_R2 <- fns[str_detect(basename(fns), \"R2\")]",
        "> ",
        "",
        "> ",
        "# Extract sample names, assuming filenames have format: 18S_SAMPLENAME_XXX.fastq.gz",
        "> ",
        "sample.names <- str_split(basename(fns_R1), pattern = \"_\", simplify = TRUE)",
        "> ",
        "sample.names <- sample.names[, 2] ",
        "Error in sample.names[, 2] : subscript out of bounds\n",
        "> ",
        "sample.names <- sample.names[, 2] ",
        "Error in sample.names[, 2] : subscript out of bounds\n",
        "> ",
        "sample.names",
        "<0 x 0 matrix>\n",
        "> ",
        "list.files(fastq_dir, full.names = T)",
        "character(0)\n",
        "> ",
        "PR2_tax_levels <- c(\"Kingdom\", \"Supergroup\", \"Division\", \"Class\", ",
        "+ ",
        "                    \"Order\", \"Family\",",
        "+ ",
        "                    \"Genus\", \"Species\")",
        "> ",
        "",
        "> ",
        "#### Examine fastq files",
        "> ",
        "# get a list of all fastq files in the fastq\" directory and separate R1 and R2",
        "> ",
        "fns <- sort(list.files(fastq_dir, full.names = T))",
        "> ",
        "fns <- fns[str_detect(basename(fns), \".fastq.gz\")]",
        "> ",
        "fns_R1 <- fns[str_detect(basename(fns), \"R1\")]",
        "> ",
        "fns_R2 <- fns[str_detect(basename(fns), \"R2\")]",
        "> ",
        "",
        "> ",
        "# Extract sample names, assuming filenames have format: 18S_SAMPLENAME_XXX.fastq.gz",
        "> ",
        "sample.names <- str_split(basename(fns_R1), pattern = \"_\", simplify = TRUE)",
        "> ",
        "sample.names <- sample.names[, 2] ",
        "> ",
        "```{#r, hide}",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "install.packages(\"readr\")     # To read and write files",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"readxl\")    # To read excel files",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"dplyr\")     # To manipulate dataframes",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"tibble\")    # To work with data frames",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"tidyr\")     # To work with data frames",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"stringr\")   # To manipulate strings",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"ggplot2\")   # To do plots",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"kableExtra\")  # necessary for nice table formatting with knitr",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "if (!requireNamespace(\"BiocManager\", quietly = TRUE))",
        "+ ",
        "  install.packages(\"BiocManager\")",
        "> ",
        "#BiocManager::install(version = \"3.10\")",
        "> ",
        "BiocManager::install(c(\"dada2\", \"phyloseq\",\"Biostrings\"))",
        "'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n'?repositories' for details\n\nreplacement repositories:\n    CRAN: https://cran.uib.no/\n\n",
        "Bioconductor version 3.12 (BiocManager 1.30.12), R 4.0.4 (2021-02-15)\n",
        "Installing package(s) 'dada2', 'phyloseq', 'Biostrings'\n",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        2
    ]
}